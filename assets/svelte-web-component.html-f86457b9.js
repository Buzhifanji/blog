import{_ as t,X as c,Y as l,Z as n,$ as e,a0 as a,a1 as o,E as r}from"./framework-7f72c1b4.js";const i={},p={href:"https://www.npmjs.com/package/render-big-data",target:"_blank",rel:"noopener noreferrer"},d=n("code",null,"虚拟列表",-1),u=o('<p><code>web component</code>是浏览器原生组件，现如今主流框架都支持它。<code>web component</code>组件简单直接，符合直觉，不用加载任何外部模块，代码量小。基于<code>web component</code>就可以解决上述两个问题，可以达到一劳永逸的效果。</p><h2 id="为什么是svelte" tabindex="-1"><a class="header-anchor" href="#为什么是svelte" aria-hidden="true">#</a> 为什么是svelte</h2><p>实现<code>web component</code>技术有很多，例如vue、react、anuglar、svelte、stenciljs、lit、纯js等等。但是兼顾开发效率和打包体积的并不多，开发效率影响着开发进度，<code>web component</code>是原生组件，如果一个组件过于大，就会消耗更多资源来加载组件。</p>',3),v=n("code",null,"web component",-1),m={href:"https://webcomponents.dev/blog/all-the-ways-to-make-a-web-component/",target:"_blank",rel:"noopener noreferrer"},h=o(`<p>svelte既有很好的开发效率，也不存在打包体积过于的大弊端。所以svelte是不错的技术选择。svelte和vue有很多相似的地方，即使是没有使用过这个框架，上手难度也不高，开发心智低。</p><h2 id="项目构建" tabindex="-1"><a class="header-anchor" href="#项目构建" aria-hidden="true">#</a> 项目构建</h2><h3 id="搭建示例" tabindex="-1"><a class="header-anchor" href="#搭建示例" aria-hidden="true">#</a> 搭建示例</h3><p>这里采用vite构建工具，选vite是因为开发体验好。推荐使用pnpm，而不是npm，是因为pnpm 下载到node_modules的依赖包下内存比npm小很多。</p><div class="language-console line-numbers-mode" data-ext="console"><pre class="language-console"><code>pnpm create vite
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后按照提示，在终端输入信息。</p><ul><li>Project name：vite-project (输入你的项目名称)</li><li>Select a framework：选择Svelte</li><li>Select a variant：选择TypeScript</li></ul><p>项目模板已经下载好了，接下来下载依赖包</p><div class="language-console line-numbers-mode" data-ext="console"><pre class="language-console"><code>cd vite-project
pnpm i
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>启动项目</p><div class="language-console line-numbers-mode" data-ext="console"><pre class="language-console"><code>pnpm dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>草稿</p><h3 id="示例配置" tabindex="-1"><a class="header-anchor" href="#示例配置" aria-hidden="true">#</a> 示例配置</h3><p>在svelte.config.js新增配置属性customElements</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> vitePreprocess <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@sveltejs/vite-plugin-svelte&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token comment">// Consult https://svelte.dev/docs#compile-time-svelte-preprocess</span>
  <span class="token comment">// for more information about preprocessors</span>
  <span class="token literal-property property">preprocess</span><span class="token operator">:</span> <span class="token function">vitePreprocess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">customElements</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 新增这个属性</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置svelte</p><h2 id="打包成-web-component" tabindex="-1"><a class="header-anchor" href="#打包成-web-component" aria-hidden="true">#</a> 打包成 web component</h2><h2 id="处理-ts" tabindex="-1"><a class="header-anchor" href="#处理-ts" aria-hidden="true">#</a> 处理 ts</h2>`,18);function b(k,_){const s=r("ExternalLinkIcon");return c(),l("div",null,[n("p",null,[e("笔者最近开源了一个组件库"),n("a",p,[e("render-big-data"),a(s)]),e("，用于渲染大数据。本质上是"),d,e("，按需渲染数据。市面上已经有很多类似的组件，但都是针对具体某个框架。依托于具体框架，就会面临两个问题。其一是框架升级改动过于大，组件库就很可能需要重新实现一遍，比如vue2升级到vue3。其二是框架被别的框架所取代，比如jQuery，组件库自然也要重新实现。")]),u,n("p",null,[e("纯js实现，可以说不用打包，一份js文件代码就是一个"),v,e("，但开发效率低，需要开发者自己处理的事情多，比如数据响应式。 现在主流框架vue、react、anuglar，开发效率是高，但是弊端是打包后的体积过于大，关于打包体积对比，详情查看"),n("a",m,[e("all-the-ways-to-make-a-web-component"),a(s)]),e("的Bundle Size Comparison章节。")]),h])}const f=t(i,[["render",b],["__file","svelte-web-component.html.vue"]]);export{f as default};
