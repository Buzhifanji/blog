const n=JSON.parse('{"key":"v-4709f73e","path":"/design-pattern/SOLID/%E5%8D%95%E4%B8%80%E8%81%8C%E8%B4%A3.html","title":"设计模式SOLID原则之单一职责原则（SRP）","lang":"zh-CN","frontmatter":{"title":"设计模式SOLID原则之单一职责原则（SRP）","date":"2022-11-05T20:00:00.000Z","category":["设计模式","SOLID原则"],"tag":["设计模式","SOLID原则"]},"headers":[],"git":{"createdTime":1667656093000,"updatedTime":1667656093000,"contributors":[{"name":"huangbin","email":"1127779503@qq.com","commits":1}]},"readingTime":{"minutes":1.41,"words":423},"filePathRelative":"design-pattern/SOLID/单一职责.md","localizedDate":"2022年11月5日","excerpt":"<p>一个对象应该只包含单一的职责，并且该职责被完整地封装在一个类中，即又定义有且仅有一个原因使类变更。（甲类负责两个不同的职责：职责A，职责B。当由于职责A需求发生改变而需要修改类T时，有可能会导致原本运行正常的职责B功能发生故障。也就是说职责A和B被耦合在了一起”）</p>\\n<p>有点抽象，下面以代码为例，来解释说明：</p>\\n<p>定义 Journal 类来创建日志</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Journal</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token function\\">constructor</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>entries <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token function\\">addEntry</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">text</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">let</span> c <span class=\\"token operator\\">=</span> <span class=\\"token operator\\">++</span>Journal<span class=\\"token punctuation\\">.</span>count<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">let</span> entry <span class=\\"token operator\\">=</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">`</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">${</span>c<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">: </span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">${</span>text<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token template-punctuation string\\">`</span></span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>entries<span class=\\"token punctuation\\">[</span>c<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> entry<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">return</span> c<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token function\\">removeEntry</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">index</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">delete</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>entries<span class=\\"token punctuation\\">[</span>index<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token function\\">toString</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> Object<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">values</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>entries<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">join</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"\\\\n\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\nJournal<span class=\\"token punctuation\\">.</span>count <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 记录数目</span>\\n\\n<span class=\\"token comment\\">// test </span>\\n<span class=\\"token keyword\\">let</span> j <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Journal</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nj<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addEntry</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"I cried today\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nj<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addEntry</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"I ate a bug\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>j<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toString</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};
