// docs/.vuepress/config.ts
import { resolve } from "path";
import { defineConfig4CustomTheme } from "vuepress/config";
import dayjs from "dayjs";

// docs/.vuepress/config/baiduCode.js
var baiduCode_default = "503f098e7e5b3a5b5d8c5fc2938af002";

// docs/.vuepress/config/htmlModules.ts
var htmlModule = {
  homeSidebarB: `<div style="padding: 0.95rem">
    <p style="
      color: var(--textColor);
      opacity: 0.9;
      font-size: 20px;
      font-weight: bold;
      margin: 0 0 8px 0;
    ">\u516C\u4F17\u53F7</p>
    <img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store@master/blog/\u626B\u7801_\u641C\u7D22\u8054\u5408\u4F20\u64AD\u6837\u5F0F-\u6807\u51C6\u8272\u7248.1wp8gd1mhjhc.jpg"  style="width:100%;" />
    <p>
    \u6709\u8DA3\u7814\u7A76\u793E\uFF0C\u8FD9\u91CC\u6709<a href="https://game.xugaoyi.com" arget="_blank" > FC\u5728\u7EBF\u6A21\u62DF\u5668(\u5C0F\u9738\u738B) <span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>\uFF0C\u8FD8\u6709\u66F4\u591A\u597D\u73A9\u7684\u7B49\u7740\u4F60\u53BB\u63A2\u7D22~
    </br></br>
    \u5173\u6CE8\u516C\u4F17\u53F7\uFF0C\u56DE\u590D[<b>\u524D\u7AEF\u8D44\u6E90</b>]\uFF0C\u53EF\u83B7\u53D6 <a href="https://game.xugaoyi.com" arget="_blank" >\u524D\u7AEF\u5B66\u4E60\u8D44\u6E90<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>
    </p>
    </div>`,
};
var htmlModules_default = htmlModule;

// docs/.vuepress/config.ts
var config_default = defineConfig4CustomTheme({
  theme: resolve(
    "E:\\personal-project\\vuepress-theme-vdoing\\docs\\.vuepress",
    "../../vdoing"
  ),
  locales: {
    "/": {
      lang: "zh-CN",
      title: "Buzhifanji blog",
      description:
        "web\u524D\u7AEF\u6280\u672F\u535A\u5BA2,\u4E13\u6CE8web\u524D\u7AEF\u5B66\u4E60\u4E0E\u603B\u7ED3\u3002JavaScript,js,ES6,TypeScript,vue,React,python,css3,html5,Node,git,github\u7B49\u6280\u672F\u6587\u7AE0\u3002",
    },
  },
  themeConfig: {
    nav: [
      { text: "\u9996\u9875", link: "/" },
      {
        text: "\u524D\u7AEF",
        link: "/web/",
        items: [
          {
            text: "\u524D\u7AEF\u6587\u7AE0",
            items: [{ text: "JavaScript", link: "/pages/8143cc480faf9a11/" }],
          },
          {
            text: "\u5B66\u4E60\u7B14\u8BB0",
            items: [
              {
                text: "\u300AJavaScript\u6559\u7A0B\u300B",
                link: "/note/javascript/",
              },
              {
                text: "\u300AJavaScript\u9AD8\u7EA7\u7A0B\u5E8F\u8BBE\u8BA1\u300B",
                link: "/note/js/",
              },
              { text: "\u300AES6 \u6559\u7A0B\u300B", link: "/note/es6/" },
              { text: "\u300AVue\u300B", link: "/note/vue/" },
              { text: "\u300AReact\u300B", link: "/note/react/" },
              {
                text: "\u300ATypeScript \u4ECE\u96F6\u5B9E\u73B0 axios\u300B",
                link: "/note/typescript-axios/",
              },
              {
                text: "\u300AGit\u300B",
                link: "/note/git/",
              },
              {
                text: "TypeScript",
                link: "/pages/51afd6/",
              },
              {
                text: "JS\u8BBE\u8BA1\u6A21\u5F0F\u603B\u7ED3",
                link: "/pages/4643cd/",
              },
            ],
          },
        ],
      },
      {
        text: "\u9875\u9762",
        link: "/ui/",
        items: [
          { text: "HTML", link: "/pages/8309a5b876fc95e3/" },
          { text: "CSS", link: "/pages/0a83b083bdf257cb/" },
        ],
      },
      {
        text: "\u6280\u672F",
        link: "/technology/",
        items: [
          {
            text: "\u6280\u672F\u6587\u6863",
            link: "/pages/9a7ee40fc232253e/",
          },
          { text: "GitHub\u6280\u5DE7", link: "/pages/4c778760be26d8b3/" },
          { text: "Nodejs", link: "/pages/117708e0af7f0bd9/" },
          {
            text: "\u535A\u5BA2\u642D\u5EFA",
            link: "/pages/41f87d890d0a02af/",
          },
        ],
      },
      {
        text: "\u66F4\u591A",
        link: "/more/",
        items: [
          { text: "\u5B66\u4E60", link: "/pages/f2a556/" },
          { text: "\u9762\u8BD5", link: "/pages/aea6571b7a8bae86/" },
          {
            text: "\u5FC3\u60C5\u6742\u8D27",
            link: "/pages/2d615df9a36a98ed/",
          },
          { text: "\u5B9E\u7528\u6280\u5DE7", link: "/pages/baaa02/" },
          { text: "\u53CB\u60C5\u94FE\u63A5", link: "/friends/" },
        ],
      },
      { text: "\u5173\u4E8E", link: "/about/" },
      {
        text: "\u6536\u85CF",
        link: "/pages/beb6c0bd8a66cea6/",
      },
      {
        text: "\u7D22\u5F15",
        link: "/archives/",
        items: [
          { text: "\u5206\u7C7B", link: "/categories/" },
          { text: "\u6807\u7B7E", link: "/tags/" },
          { text: "\u5F52\u6863", link: "/archives/" },
        ],
      },
    ],
    sidebarDepth: 2,
    logo: "/img/logo.png",
    repo: "xugaoyi/vuepress-theme-vdoing",
    searchMaxSuggestions: 10,
    lastUpdated: "\u4E0A\u6B21\u66F4\u65B0",
    docsDir: "docs",
    editLinks: true,
    editLinkText: "\u7F16\u8F91",
    sidebar: "structuring",
    author: {
      name: "xugaoyi",
      link: "https://github.com/xugaoyi",
    },
    blogger: {
      avatar:
        "https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200103123203.jpg",
      name: "buzhifanji",
      slogan: "\u524D\u7AEF\u754C\u7684\u5C0F\u5B66\u751F",
    },
    social: {
      icons: [
        {
          iconClass: "icon-youjian",
          title: "\u53D1\u90AE\u4EF6",
          link: "mailto:buzhifanji@16.com",
        },
        {
          iconClass: "icon-github",
          title: "GitHub",
          link: "https://github.com/Buzhifanji",
        },
      ],
    },
    footer: {
      createYear: 2019,
      copyrightInfo:
        'Evan Xu | <a href="https://github.com/xugaoyi/vuepress-theme-vdoing/blob/master/LICENSE" target="_blank">MIT License</a>',
    },
    htmlModules: htmlModules_default,
  },
  head: [
    ["link", { rel: "icon", href: "/img/favicon.ico" }],
    [
      "meta",
      {
        name: "keywords",
        content:
          "\u524D\u7AEF\u535A\u5BA2,\u4E2A\u4EBA\u6280\u672F\u535A\u5BA2,\u524D\u7AEF,\u524D\u7AEF\u5F00\u53D1,\u524D\u7AEF\u6846\u67B6,web\u524D\u7AEF,\u524D\u7AEF\u9762\u8BD5\u9898,\u6280\u672F\u6587\u6863,\u5B66\u4E60,\u9762\u8BD5,JavaScript,js,ES6,TypeScript,vue,python,css3,html5,Node,git,github,markdown",
      },
    ],
    ["meta", { name: "baidu-site-verification", content: "7F55weZDDc" }],
    ["meta", { name: "theme-color", content: "#11a8cd" }],
  ],
  plugins: {
    "vuepress-plugin-baidu-autopush": {},
    "vuepress-plugin-baidu-tongji": {
      hm: baiduCode_default,
    },
    "fulltext-search": {},
    "one-click-copy": {
      copySelector: [
        'div[class*="language-"] pre',
        'div[class*="aside-code"] aside',
      ],
      copyMessage: "\u590D\u5236\u6210\u529F",
      duration: 1e3,
      showInMobile: false,
    },
    "demo-block": {
      settings: {
        jsfiddle: false,
        codepen: true,
        horizontal: false,
      },
    },
    "vuepress-plugin-zooming": {
      selector: ".theme-vdoing-content img:not(.no-zoom)",
      options: {
        bgColor: "rgba(0,0,0,0.6)",
      },
    },
    "vuepress-plugin-comment": {
      choosen: "gitalk",
      options: {
        clientID: "a6e1355287947096b88b",
        clientSecret: "f0e77d070fabfcd5af95bebb82b2d574d7248d71",
        repo: "blog-gitalk-comment",
        owner: "xugaoyi",
        admin: ["xugaoyi"],
        pagerDirection: "last",
        id: "<%- (frontmatter.permalink || frontmatter.to.path).slice(-16) %>",
        title: "\u300C\u8BC4\u8BBA\u300D<%- frontmatter.title %>",
        labels: ["Gitalk", "Comment"],
        body: "\u9875\u9762\uFF1A<%- window.location.origin + (frontmatter.to.path || window.location.pathname) %>",
      },
    },
    "@vuepress/last-updated": {
      transformer: (timestamp, lang) => {
        return dayjs(timestamp).format("YYYY/MM/DD, HH:mm:ss");
      },
    },
  },
  markdown: {
    lineNumbers: true,
  },
  extraWatchFiles: [".vuepress/config.ts"],
});
export { config_default as default };
//# sourceMappingURL=data:application/json;base64,
