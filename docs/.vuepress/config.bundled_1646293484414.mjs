// docs/.vuepress/config.ts
import { defineConfig4CustomTheme } from "vuepress/config";
import dayjs from "dayjs";

// docs/.vuepress/config/baiduCode.js
var baiduCode_default = "503f098e7e5b3a5b5d8c5fc2938af002";

// docs/.vuepress/config/htmlModules.ts
var htmlModule = {
  homeSidebarB: ""
};
var htmlModules_default = htmlModule;

// docs/.vuepress/config.ts
var config_default = defineConfig4CustomTheme({
  theme: "vdoing",
  locales: {
    "/": {
      lang: "zh-CN",
      title: "Buzhifanji blog",
      description: "web\u524D\u7AEF\u6280\u672F\u535A\u5BA2,\u4E13\u6CE8web\u524D\u7AEF\u5B66\u4E60\u4E0E\u603B\u7ED3\u3002JavaScript,js,ES6,TypeScript,vue,React,python,css3,html5,Node,git,github\u7B49\u6280\u672F\u6587\u7AE0\u3002"
    }
  },
  themeConfig: {
    nav: [
      { text: "\u9996\u9875", link: "/" },
      {
        text: "\u524D\u7AEF",
        link: "/web/",
        items: [
          {
            text: "\u524D\u7AEF\u6587\u7AE0",
            items: [{ text: "JavaScript", link: "/pages/8143cc480faf9a11/" }]
          }
        ]
      },
      {
        text: "\u7F51\u7EDC",
        link: "/network",
        items: [{ text: "dd", link: "/pages/c78068/" }]
      },
      {
        text: "\u7D22\u5F15",
        link: "/archives/",
        items: [
          { text: "\u5206\u7C7B", link: "/categories/" },
          { text: "\u6807\u7B7E", link: "/tags/" },
          { text: "\u5F52\u6863", link: "/archives/" }
        ]
      }
    ],
    sidebarDepth: 2,
    logo: "/img/logo.png",
    repo: "Buzhifanji/blog",
    searchMaxSuggestions: 10,
    lastUpdated: "\u4E0A\u6B21\u66F4\u65B0",
    docsDir: "docs",
    editLinks: true,
    editLinkText: "\u7F16\u8F91",
    sidebar: "structuring",
    author: {
      name: "buzhifanji",
      link: "https://github.com/Buzhifanji"
    },
    blogger: {
      avatar: "https://cdn.jsdelivr.net/gh/xugaoyi/image_store/blog/20200103123203.jpg",
      name: "buzhifanji",
      slogan: "\u524D\u7AEF\u754C\u7684\u5C0F\u5B66\u751F"
    },
    social: {
      icons: [
        {
          iconClass: "icon-youjian",
          title: "\u53D1\u90AE\u4EF6",
          link: "mailto:buzhifanji@16.com"
        },
        {
          iconClass: "icon-github",
          title: "GitHub",
          link: "https://github.com/Buzhifanji"
        }
      ]
    },
    footer: {
      createYear: 2021,
      copyrightInfo: 'buzhifanji | <a href="https://github.com/Buzhifanji/blog/master/LICENSE" target="_blank">MIT License</a>'
    },
    htmlModules: htmlModules_default
  },
  head: [
    ["link", { rel: "icon", href: "/img/favicon.ico" }],
    [
      "meta",
      {
        name: "keywords",
        content: "\u524D\u7AEF\u535A\u5BA2,\u4E2A\u4EBA\u6280\u672F\u535A\u5BA2,\u524D\u7AEF,\u524D\u7AEF\u5F00\u53D1,\u524D\u7AEF\u6846\u67B6,web\u524D\u7AEF,\u524D\u7AEF\u9762\u8BD5\u9898,\u6280\u672F\u6587\u6863,\u5B66\u4E60,\u9762\u8BD5,JavaScript,js,ES6,TypeScript,vue,python,css3,html5,Node,git,github,markdown"
      }
    ],
    ["meta", { name: "baidu-site-verification", content: "7F55weZDDc" }],
    ["meta", { name: "theme-color", content: "#11a8cd" }]
  ],
  plugins: {
    "vuepress-plugin-baidu-autopush": {},
    "vuepress-plugin-baidu-tongji": {
      hm: baiduCode_default
    },
    "fulltext-search": {},
    "one-click-copy": {
      copySelector: [
        'div[class*="language-"] pre',
        'div[class*="aside-code"] aside'
      ],
      copyMessage: "\u590D\u5236\u6210\u529F",
      duration: 1e3,
      showInMobile: false
    },
    "demo-block": {
      settings: {
        jsfiddle: false,
        codepen: true,
        horizontal: false
      }
    },
    "vuepress-plugin-zooming": {
      selector: ".theme-vdoing-content img:not(.no-zoom)",
      options: {
        bgColor: "rgba(0,0,0,0.6)"
      }
    },
    "vuepress-plugin-comment": {
      choosen: "gitalk",
      options: {
        clientID: "a6e1355287947096b88b",
        clientSecret: "f0e77d070fabfcd5af95bebb82b2d574d7248d71",
        repo: "blog-gitalk-comment",
        owner: "buzhifanji",
        admin: ["buzhifanji"],
        pagerDirection: "last",
        id: "<%- (frontmatter.permalink || frontmatter.to.path).slice(-16) %>",
        title: "\u300C\u8BC4\u8BBA\u300D<%- frontmatter.title %>",
        labels: ["Gitalk", "Comment"],
        body: "\u9875\u9762\uFF1A<%- window.location.origin + (frontmatter.to.path || window.location.pathname) %>"
      }
    },
    "@vuepress/last-updated": {
      transformer: (timestamp, lang) => {
        return dayjs(timestamp).format("YYYY/MM/DD, HH:mm:ss");
      }
    }
  },
  markdown: {
    lineNumbers: true
  },
  extraWatchFiles: [".vuepress/config.ts"]
});
export {
  config_default as default
};
//# sourceMappingURL=data:application/json;base64,
